#version 460 core

layout(local_size_x = 1) in;

const uint vectorSize = %VS%;
const uint sampleSize = %SS%;

layout(std430, binding = 0) buffer Input1 {
    double A[sampleSize][vectorSize];
};

layout(std430, binding = 1) buffer Input2 {
    double Y[sampleSize][vectorSize];
};

layout(std430, binding = 2) buffer Output {
    double dC_dZ[sampleSize][vectorSize];
};


void main() {
    uint sample = gl_GlobalInvocationID.x;
    uint neuron = gl_GlobalInvocationID.y;
    dC_dZ[sample][neuron] = A[sample][neuron] - Y[sample][neuron];
}
