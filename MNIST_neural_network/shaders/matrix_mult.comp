#version 430 core
//#extension GL_EXT_shader_atomic_int64 : require
//#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require

layout(local_size_x = 1) in;

const uint n = 1024;

layout(std430, binding = 0) buffer Input1 {
    double mat_1[n][n];
};

layout(std430, binding = 1) buffer Input2 {
    double mat_2[n][n];
};

layout(std430, binding = 2) buffer Output {
    double mat_out[n][n];
};


void main() {
    uint idx = gl_GlobalInvocationID.x;
    uint idy = gl_GlobalInvocationID.y;

    double sum = 0.0;
    for (int i = 0; i < n; ++i){
        sum += mat_1[idx][i] * mat_2[i][idy];
    }
    mat_out[idx][idy] = sum;
}
